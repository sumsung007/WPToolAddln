<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Contact.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gNbEsmX/A8HcukTMOap5AAAAAElFTkSuQmCC
</value>
  </data>
</root>