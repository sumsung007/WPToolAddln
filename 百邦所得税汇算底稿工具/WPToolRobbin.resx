<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Contact.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        qnkAAAAASUVORK5CYII=
</value>
  </data>
</root>