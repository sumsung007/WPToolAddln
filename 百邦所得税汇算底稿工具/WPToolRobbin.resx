<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Contact.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RKVeCEjCAAAAAElFTkSuQmCC
</value>
  </data>
</root>