<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Contact.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>