<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Contact.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>